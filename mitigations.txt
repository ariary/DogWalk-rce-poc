A kind of mitigation is in place:
The webdav server is not reached when we open the .diagcab file

~> It looks like webdav is not enable yet (by default)
~> not a browser dependant issue

How to confirm that we are in this disposition?
- dir \\webdav-test.herokuapp.com@ssl\DavWWWRoot\package (in cmd) does not work
- file://///webdav-test.herokuapp.com@ssl/DavWWWRoot/package or file://webdav-test.herokuapp.com@ssl/DavWWWRoot/package/ do not work in browser (nothing is loaded)

Workaround:
In file explorer: specify path in the search bar "//", press ENTER
You will see that file://///webdav-test.herokuapp.com@ssl/DavWWWRoot/package is reachable from your browser
=> The PoC will work

You have to start service named WebClient to make network connection work.
It looks like there is no WebClient service on Windows Servers by default (I worked on Server 2016).
You can install WebClient service on Windows Servers by executing powershell commands below.
  # Install-WindowsFeature WebDAV-Redirector â€“Restart
  # Set-Service WebClient -StartupType Automatic
  # Set-Service MRxDAV -StartupType Automatic
  # Start-Service WebClient
  # Start-Service MRxDAV

Also you should add one more ..\ to $MALICIOUS_PATH_PREFIX for exploit to work on Windows Servers (https://github.com/ariary/DogWalk-rce-poc/blob/9cffafdc6574c480448bcc4db846e1c14784bcf8/webdav/diagcab-webdav-poc/diagcab-webdav-poc.pl#L9)
